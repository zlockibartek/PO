1675109712
waR3U4bTeM%3A677735ee997c19b814fd23f525c11926-011a2c96dbcd6298c4a6abe4ba8ab064
s:26300:"O:33:"phpDocumentor\Reflection\Php\File":14:{s:43:" phpDocumentor\Reflection\Php\File docBlock";N;s:39:" phpDocumentor\Reflection\Php\File hash";s:32:"011a2c96dbcd6298c4a6abe4ba8ab064";s:39:" phpDocumentor\Reflection\Php\File name";s:17:"WhereInWalker.php";s:39:" phpDocumentor\Reflection\Php\File path";s:71:"vendor/doctrine/orm/lib/Doctrine/ORM/Tools/Pagination/WhereInWalker.php";s:41:" phpDocumentor\Reflection\Php\File source";s:6260:"<?php

declare(strict_types=1);

namespace Doctrine\ORM\Tools\Pagination;

use Doctrine\ORM\Mapping\ClassMetadata;
use Doctrine\ORM\Query\AST\ArithmeticExpression;
use Doctrine\ORM\Query\AST\ConditionalExpression;
use Doctrine\ORM\Query\AST\ConditionalFactor;
use Doctrine\ORM\Query\AST\ConditionalPrimary;
use Doctrine\ORM\Query\AST\ConditionalTerm;
use Doctrine\ORM\Query\AST\InExpression;
use Doctrine\ORM\Query\AST\InputParameter;
use Doctrine\ORM\Query\AST\NullComparisonExpression;
use Doctrine\ORM\Query\AST\PathExpression;
use Doctrine\ORM\Query\AST\SelectStatement;
use Doctrine\ORM\Query\AST\SimpleArithmeticExpression;
use Doctrine\ORM\Query\AST\WhereClause;
use Doctrine\ORM\Query\TreeWalkerAdapter;
use Doctrine\ORM\Utility\PersisterHelper;
use RuntimeException;

use function array_map;
use function assert;
use function count;
use function is_array;
use function reset;

/**
 * Replaces the whereClause of the AST with a WHERE id IN (:foo_1, :foo_2) equivalent.
 */
class WhereInWalker extends TreeWalkerAdapter
{
    /**
     * ID Count hint name.
     */
    public const HINT_PAGINATOR_ID_COUNT = 'doctrine.id.count';

    /**
     * Primary key alias for query.
     */
    public const PAGINATOR_ID_ALIAS = 'dpid';

    /**
     * Replaces the whereClause in the AST.
     *
     * Generates a clause equivalent to WHERE IN (:dpid_1, :dpid_2, ...)
     *
     * The parameter namespace (dpid) is defined by
     * the PAGINATOR_ID_ALIAS
     *
     * The total number of parameters is retrieved from
     * the HINT_PAGINATOR_ID_COUNT query hint.
     *
     * @return void
     *
     * @throws RuntimeException
     */
    public function walkSelectStatement(SelectStatement $AST)
    {
        $queryComponents = $this->_getQueryComponents();
        // Get the root entity and alias from the AST fromClause
        $from = $AST->fromClause->identificationVariableDeclarations;

        if (count($from) > 1) {
            throw new RuntimeException('Cannot count query which selects two FROM components, cannot make distinction');
        }

        $fromRoot  = reset($from);
        $rootAlias = $fromRoot->rangeVariableDeclaration->aliasIdentificationVariable;
        $rootClass = $queryComponents[$rootAlias]['metadata'];
        assert($rootClass instanceof ClassMetadata);
        $identifierFieldName = $rootClass->getSingleIdentifierFieldName();

        $pathType = PathExpression::TYPE_STATE_FIELD;
        if (isset($rootClass->associationMappings[$identifierFieldName])) {
            $pathType = PathExpression::TYPE_SINGLE_VALUED_ASSOCIATION;
        }

        $pathExpression       = new PathExpression(PathExpression::TYPE_STATE_FIELD | PathExpression::TYPE_SINGLE_VALUED_ASSOCIATION, $rootAlias, $identifierFieldName);
        $pathExpression->type = $pathType;

        $count = $this->_getQuery()->getHint(self::HINT_PAGINATOR_ID_COUNT);

        if ($count > 0) {
            $arithmeticExpression                             = new ArithmeticExpression();
            $arithmeticExpression->simpleArithmeticExpression = new SimpleArithmeticExpression(
                [$pathExpression]
            );
            $expression                                       = new InExpression($arithmeticExpression);
            $expression->literals[]                           = new InputParameter(':' . self::PAGINATOR_ID_ALIAS);

            $this->convertWhereInIdentifiersToDatabaseValue(
                PersisterHelper::getTypeOfField(
                    $identifierFieldName,
                    $rootClass,
                    $this->_getQuery()
                        ->getEntityManager()
                )[0]
            );
        } else {
            $expression      = new NullComparisonExpression($pathExpression);
            $expression->not = false;
        }

        $conditionalPrimary                              = new ConditionalPrimary();
        $conditionalPrimary->simpleConditionalExpression = $expression;
        if ($AST->whereClause) {
            if ($AST->whereClause->conditionalExpression instanceof ConditionalTerm) {
                $AST->whereClause->conditionalExpression->conditionalFactors[] = $conditionalPrimary;
            } elseif ($AST->whereClause->conditionalExpression instanceof ConditionalPrimary) {
                $AST->whereClause->conditionalExpression = new ConditionalExpression(
                    [
                        new ConditionalTerm(
                            [
                                $AST->whereClause->conditionalExpression,
                                $conditionalPrimary,
                            ]
                        ),
                    ]
                );
            } elseif (
                $AST->whereClause->conditionalExpression instanceof ConditionalExpression
                || $AST->whereClause->conditionalExpression instanceof ConditionalFactor
            ) {
                $tmpPrimary                              = new ConditionalPrimary();
                $tmpPrimary->conditionalExpression       = $AST->whereClause->conditionalExpression;
                $AST->whereClause->conditionalExpression = new ConditionalTerm(
                    [
                        $tmpPrimary,
                        $conditionalPrimary,
                    ]
                );
            }
        } else {
            $AST->whereClause = new WhereClause(
                new ConditionalExpression(
                    [new ConditionalTerm([$conditionalPrimary])]
                )
            );
        }
    }

    private function convertWhereInIdentifiersToDatabaseValue(string $type): void
    {
        $query                = $this->_getQuery();
        $identifiersParameter = $query->getParameter(self::PAGINATOR_ID_ALIAS);

        assert($identifiersParameter !== null);

        $identifiers = $identifiersParameter->getValue();

        assert(is_array($identifiers));

        $connection = $this->_getQuery()
            ->getEntityManager()
            ->getConnection();

        $query->setParameter(self::PAGINATOR_ID_ALIAS, array_map(static function ($id) use ($connection, $type) {
            return $connection->convertToDatabaseValue($id, $type);
        }, $identifiers));
    }
}
";s:45:" phpDocumentor\Reflection\Php\File namespaces";a:1:{s:30:"\Doctrine\ORM\Tools\Pagination";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:30:"\Doctrine\ORM\Tools\Pagination";s:36:" phpDocumentor\Reflection\Fqsen name";s:10:"Pagination";}}s:43:" phpDocumentor\Reflection\Php\File includes";a:0:{}s:44:" phpDocumentor\Reflection\Php\File functions";a:0:{}s:44:" phpDocumentor\Reflection\Php\File constants";a:0:{}s:42:" phpDocumentor\Reflection\Php\File classes";a:1:{s:44:"\Doctrine\ORM\Tools\Pagination\WhereInWalker";O:35:"phpDocumentor\Reflection\Php\Class_":12:{s:42:" phpDocumentor\Reflection\Php\Class_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:44:"\Doctrine\ORM\Tools\Pagination\WhereInWalker";s:36:" phpDocumentor\Reflection\Fqsen name";s:13:"WhereInWalker";}s:45:" phpDocumentor\Reflection\Php\Class_ docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:83:"Replaces the whereClause of the AST with a WHERE id IN (:foo_1, :foo_2) equivalent.";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:0:{}s:42:" phpDocumentor\Reflection\DocBlock context";O:38:"phpDocumentor\Reflection\Types\Context":2:{s:49:" phpDocumentor\Reflection\Types\Context namespace";s:29:"Doctrine\ORM\Tools\Pagination";s:56:" phpDocumentor\Reflection\Types\Context namespaceAliases";a:16:{s:13:"ClassMetadata";s:34:"Doctrine\ORM\Mapping\ClassMetadata";s:20:"ArithmeticExpression";s:43:"Doctrine\ORM\Query\AST\ArithmeticExpression";s:21:"ConditionalExpression";s:44:"Doctrine\ORM\Query\AST\ConditionalExpression";s:17:"ConditionalFactor";s:40:"Doctrine\ORM\Query\AST\ConditionalFactor";s:18:"ConditionalPrimary";s:41:"Doctrine\ORM\Query\AST\ConditionalPrimary";s:15:"ConditionalTerm";s:38:"Doctrine\ORM\Query\AST\ConditionalTerm";s:12:"InExpression";s:35:"Doctrine\ORM\Query\AST\InExpression";s:14:"InputParameter";s:37:"Doctrine\ORM\Query\AST\InputParameter";s:24:"NullComparisonExpression";s:47:"Doctrine\ORM\Query\AST\NullComparisonExpression";s:14:"PathExpression";s:37:"Doctrine\ORM\Query\AST\PathExpression";s:15:"SelectStatement";s:38:"Doctrine\ORM\Query\AST\SelectStatement";s:26:"SimpleArithmeticExpression";s:49:"Doctrine\ORM\Query\AST\SimpleArithmeticExpression";s:11:"WhereClause";s:34:"Doctrine\ORM\Query\AST\WhereClause";s:17:"TreeWalkerAdapter";s:36:"Doctrine\ORM\Query\TreeWalkerAdapter";s:15:"PersisterHelper";s:36:"Doctrine\ORM\Utility\PersisterHelper";s:16:"RuntimeException";s:16:"RuntimeException";}}s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:45:" phpDocumentor\Reflection\Php\Class_ abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Class_ final";b:0;s:43:" phpDocumentor\Reflection\Php\Class_ parent";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:37:"\Doctrine\ORM\Query\TreeWalkerAdapter";s:36:" phpDocumentor\Reflection\Fqsen name";s:17:"TreeWalkerAdapter";}s:47:" phpDocumentor\Reflection\Php\Class_ implements";a:0:{}s:46:" phpDocumentor\Reflection\Php\Class_ constants";a:2:{s:69:"\Doctrine\ORM\Tools\Pagination\WhereInWalker::HINT_PAGINATOR_ID_COUNT";O:37:"phpDocumentor\Reflection\Php\Constant":7:{s:44:" phpDocumentor\Reflection\Php\Constant fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:69:"\Doctrine\ORM\Tools\Pagination\WhereInWalker::HINT_PAGINATOR_ID_COUNT";s:36:" phpDocumentor\Reflection\Fqsen name";s:23:"HINT_PAGINATOR_ID_COUNT";}s:47:" phpDocumentor\Reflection\Php\Constant docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:19:"ID Count hint name.";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:0:{}s:42:" phpDocumentor\Reflection\DocBlock context";r:25;s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:44:" phpDocumentor\Reflection\Php\Constant value";s:19:"'doctrine.id.count'";s:47:" phpDocumentor\Reflection\Php\Constant location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:38;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:49:" phpDocumentor\Reflection\Php\Constant visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:44:" phpDocumentor\Reflection\Php\Constant final";b:0;s:47:" phpDocumentor\Reflection\Php\Constant metadata";a:0:{}}s:64:"\Doctrine\ORM\Tools\Pagination\WhereInWalker::PAGINATOR_ID_ALIAS";O:37:"phpDocumentor\Reflection\Php\Constant":7:{s:44:" phpDocumentor\Reflection\Php\Constant fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:64:"\Doctrine\ORM\Tools\Pagination\WhereInWalker::PAGINATOR_ID_ALIAS";s:36:" phpDocumentor\Reflection\Fqsen name";s:18:"PAGINATOR_ID_ALIAS";}s:47:" phpDocumentor\Reflection\Php\Constant docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:28:"Primary key alias for query.";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:0:{}s:42:" phpDocumentor\Reflection\DocBlock context";r:25;s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:44:" phpDocumentor\Reflection\Php\Constant value";s:6:"'dpid'";s:47:" phpDocumentor\Reflection\Php\Constant location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:43;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:49:" phpDocumentor\Reflection\Php\Constant visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:44:" phpDocumentor\Reflection\Php\Constant final";b:0;s:47:" phpDocumentor\Reflection\Php\Constant metadata";a:0:{}}}s:47:" phpDocumentor\Reflection\Php\Class_ properties";a:0:{}s:44:" phpDocumentor\Reflection\Php\Class_ methods";a:2:{s:67:"\Doctrine\ORM\Tools\Pagination\WhereInWalker::walkSelectStatement()";O:35:"phpDocumentor\Reflection\Php\Method":10:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:36:"Replaces the whereClause in the AST.";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:224:"Generates a clause equivalent to WHERE IN (:dpid_1, :dpid_2, ...)

The parameter namespace (dpid) is defined by
the PAGINATOR_ID_ALIAS

The total number of parameters is retrieved from
the HINT_PAGINATOR_ID_COUNT query hint.";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:2:{i:0;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Return_":3:{s:7:" * type";O:36:"phpDocumentor\Reflection\Types\Void_":0:{}s:7:" * name";s:6:"return";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}i:1;O:45:"phpDocumentor\Reflection\DocBlock\Tags\Throws":3:{s:7:" * type";O:38:"phpDocumentor\Reflection\Types\Object_":1:{s:45:" phpDocumentor\Reflection\Types\Object_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:17:"\RuntimeException";s:36:" phpDocumentor\Reflection\Fqsen name";s:16:"RuntimeException";}}s:7:" * name";s:6:"throws";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}}s:42:" phpDocumentor\Reflection\DocBlock context";r:25;s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:67:"\Doctrine\ORM\Tools\Pagination\WhereInWalker::walkSelectStatement()";s:36:" phpDocumentor\Reflection\Fqsen name";s:19:"walkSelectStatement";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:1:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:3:"AST";s:43:" phpDocumentor\Reflection\Php\Argument type";O:38:"phpDocumentor\Reflection\Types\Object_":1:{s:45:" phpDocumentor\Reflection\Types\Object_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:39:"\Doctrine\ORM\Query\AST\SelectStatement";s:36:" phpDocumentor\Reflection\Fqsen name";s:15:"SelectStatement";}}s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:60;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}}s:88:"\Doctrine\ORM\Tools\Pagination\WhereInWalker::convertWhereInIdentifiersToDatabaseValue()";O:35:"phpDocumentor\Reflection\Php\Method":10:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:88:"\Doctrine\ORM\Tools\Pagination\WhereInWalker::convertWhereInIdentifiersToDatabaseValue()";s:36:" phpDocumentor\Reflection\Fqsen name";s:40:"convertWhereInIdentifiersToDatabaseValue";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:7:"private";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:1:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:4:"type";s:43:" phpDocumentor\Reflection\Php\Argument type";O:38:"phpDocumentor\Reflection\Types\String_":0:{}s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:145;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:36:"phpDocumentor\Reflection\Types\Void_":0:{}s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}}}s:47:" phpDocumentor\Reflection\Php\Class_ usedTraits";a:0:{}s:45:" phpDocumentor\Reflection\Php\Class_ location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:33;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:45:" phpDocumentor\Reflection\Php\Class_ metadata";a:0:{}}}s:45:" phpDocumentor\Reflection\Php\File interfaces";a:0:{}s:41:" phpDocumentor\Reflection\Php\File traits";a:0:{}s:40:" phpDocumentor\Reflection\Php\File enums";a:0:{}s:43:" phpDocumentor\Reflection\Php\File metadata";a:0:{}}";